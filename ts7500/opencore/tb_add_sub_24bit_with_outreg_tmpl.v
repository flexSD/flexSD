//Verilog testbench template generated by SCUBA Diamond_1.2_Production (92)
`timescale 1 ns / 1 ps
module tb;
    reg [23:0] DataA = 24'b0;
    reg [23:0] DataB = 24'b0;
    reg Add_Sub = 0;
    reg Clock = 0;
    reg Reset = 0;
    reg ClockEn = 0;
    wire [23:0] Result;
    wire Overflow;

    integer i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;

    GSR GSR_INST (.GSR(1'b1));
    PUR PUR_INST (.PUR(1'b1));

    add_sub_24bit_with_outreg u1 (.DataA(DataA), .DataB(DataB), .Add_Sub(Add_Sub), 
        .Clock(Clock), .Reset(Reset), .ClockEn(ClockEn), .Result(Result), 
        .Overflow(Overflow)
    );

    initial
    begin
       DataA <= 0;
      for (i1 = 0; i1 < 200; i1 = i1 + 1) begin
        @(posedge Clock);
        #1  DataA <= DataA + 1'b1;
      end
    end
    initial
    begin
       DataB <= 0;
      for (i2 = 0; i2 < 200; i2 = i2 + 1) begin
        @(posedge Clock);
        #1  DataB <= DataB + 1'b1;
      end
    end
    initial
    begin
       Add_Sub <= 1'b1;
      for (i3 = 0; i3 < 100; i3 = i3 + 1) begin
        @(posedge Clock);
      end
       Add_Sub <= 1'b0;
    end
    always
    #5.00 Clock <= ~ Clock;

    initial
    begin
       Reset <= 1'b1;
      #100;
       Reset <= 1'b0;
    end
    initial
    begin
       ClockEn <= 1'b1;
    end
endmodule