/* Verilog netlist generated by SCUBA Diamond_1.2_Production (92) */
/* Module Version: 3.1 */
/* /usr/local/diamond/1.2/ispfpga/bin/lin/scuba -w -lang verilog -synth synplify -bus_exp 7 -bb -arch mg5a00 -type addsub -width 24 -signed -port overflow -output_reg -enable -pipeline 0 -e  */
/* Tue May  8 12:58:28 2012 */


`timescale 1 ns / 1 ps
module add_sub_24bit (DataA, DataB, Add_Sub, Clock, Reset, ClockEn, 
    Result, Overflow);
    input wire [23:0] DataA;
    input wire [23:0] DataB;
    input wire Add_Sub;
    input wire Clock;
    input wire Reset;
    input wire ClockEn;
    output wire [23:0] Result;
    output wire Overflow;

    wire co_n_1;
    wire scuba_vhi;
    wire r0_co_n_1;
    wire r0_sum22;
    wire r0_sum21;
    wire r0_sum20;
    wire r0_sum19;
    wire r0_sum18;
    wire r0_sum17;
    wire r0_sum16;
    wire r0_sum15;
    wire r0_sum14;
    wire r0_sum13;
    wire r0_sum12;
    wire r0_sum11;
    wire r0_sum10;
    wire r0_sum9;
    wire r0_sum8;
    wire r0_sum7;
    wire r0_sum6;
    wire r0_sum5;
    wire r0_sum4;
    wire r0_sum3;
    wire r0_sum2;
    wire r0_sum1;
    wire r0_sum0;
    wire addsub_oreg1;
    wire tsum0;
    wire tsum1;
    wire tsum2;
    wire co0;
    wire tsum3;
    wire tsum4;
    wire co1;
    wire tsum5;
    wire tsum6;
    wire co2;
    wire tsum7;
    wire tsum8;
    wire co3;
    wire tsum9;
    wire tsum10;
    wire co4;
    wire tsum11;
    wire tsum12;
    wire co5;
    wire tsum13;
    wire tsum14;
    wire co6;
    wire tsum15;
    wire tsum16;
    wire co7;
    wire tsum17;
    wire tsum18;
    wire co8;
    wire tsum19;
    wire tsum20;
    wire co9;
    wire tsum21;
    wire tsum22;
    wire co10;
    wire co11;
    wire add_sub_inv;
    wire sum23_r1;
    wire t_bn;
    wire tco_n_1;
    wire co_n;
    wire co_n_t;
    wire scuba_vlo;

    VHI scuba_vhi_inst (.Z(scuba_vhi));

    INV INV_0 (.A(Add_Sub), .Z(add_sub_inv));

    XNOR2 XNOR2_t1 (.A(Add_Sub), .B(DataB[23]), .Z(t_bn));

    XOR2 XOR2_t0 (.A(tco_n_1), .B(co_n), .Z(addsub_oreg1));

    // synopsys translate_off
    defparam FF_25.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_25 (.D(tco_n_1), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_co_n_1))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_24.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_24 (.D(tsum22), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum22))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_23.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_23 (.D(tsum21), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum21))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_22.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_22 (.D(tsum20), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum20))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_21.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_21 (.D(tsum19), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum19))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_20.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_20 (.D(tsum18), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum18))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_19.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_19 (.D(tsum17), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum17))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_18.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_18 (.D(tsum16), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum16))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_17.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_17 (.D(tsum15), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum15))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_16.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_16 (.D(tsum14), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum14))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_15.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_15 (.D(tsum13), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum13))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_14.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_14 (.D(tsum12), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum12))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_13.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_13 (.D(tsum11), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum11))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_12.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_12 (.D(tsum10), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum10))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_11.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_11 (.D(tsum9), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum9))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_10.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_10 (.D(tsum8), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum8))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_9.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_9 (.D(tsum7), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum7))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_8.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_8 (.D(tsum6), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum6))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_7.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_7 (.D(tsum5), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum5))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_6.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_6 (.D(tsum4), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum4))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_5.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_5 (.D(tsum3), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum3))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_4.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_4 (.D(tsum2), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum2))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_3.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_3 (.D(tsum1), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum1))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_2.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_2 (.D(tsum0), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(r0_sum0))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_1.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_1 (.D(sum23_r1), .SP(ClockEn), .CK(Clock), .CD(Reset), .Q(Result[23]))
             /* synthesis GSR="ENABLED" */;

    // synopsys translate_off
    defparam FF_0.GSR = "ENABLED" ;
    // synopsys translate_on
    FD1P3DX FF_0 (.D(addsub_oreg1), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Overflow))
             /* synthesis GSR="ENABLED" */;

    FADSU2 addsub_0 (.A0(add_sub_inv), .A1(DataA[0]), .B0(scuba_vlo), .B1(DataB[0]), 
        .BCI(scuba_vlo), .CON(Add_Sub), .BCO(co0), .S0(), .S1(tsum0));

    FADSU2 addsub_1 (.A0(DataA[1]), .A1(DataA[2]), .B0(DataB[1]), .B1(DataB[2]), 
        .BCI(co0), .CON(Add_Sub), .BCO(co1), .S0(tsum1), .S1(tsum2));

    FADSU2 addsub_2 (.A0(DataA[3]), .A1(DataA[4]), .B0(DataB[3]), .B1(DataB[4]), 
        .BCI(co1), .CON(Add_Sub), .BCO(co2), .S0(tsum3), .S1(tsum4));

    FADSU2 addsub_3 (.A0(DataA[5]), .A1(DataA[6]), .B0(DataB[5]), .B1(DataB[6]), 
        .BCI(co2), .CON(Add_Sub), .BCO(co3), .S0(tsum5), .S1(tsum6));

    FADSU2 addsub_4 (.A0(DataA[7]), .A1(DataA[8]), .B0(DataB[7]), .B1(DataB[8]), 
        .BCI(co3), .CON(Add_Sub), .BCO(co4), .S0(tsum7), .S1(tsum8));

    FADSU2 addsub_5 (.A0(DataA[9]), .A1(DataA[10]), .B0(DataB[9]), .B1(DataB[10]), 
        .BCI(co4), .CON(Add_Sub), .BCO(co5), .S0(tsum9), .S1(tsum10));

    FADSU2 addsub_6 (.A0(DataA[11]), .A1(DataA[12]), .B0(DataB[11]), .B1(DataB[12]), 
        .BCI(co5), .CON(Add_Sub), .BCO(co6), .S0(tsum11), .S1(tsum12));

    FADSU2 addsub_7 (.A0(DataA[13]), .A1(DataA[14]), .B0(DataB[13]), .B1(DataB[14]), 
        .BCI(co6), .CON(Add_Sub), .BCO(co7), .S0(tsum13), .S1(tsum14));

    FADSU2 addsub_8 (.A0(DataA[15]), .A1(DataA[16]), .B0(DataB[15]), .B1(DataB[16]), 
        .BCI(co7), .CON(Add_Sub), .BCO(co8), .S0(tsum15), .S1(tsum16));

    FADSU2 addsub_9 (.A0(DataA[17]), .A1(DataA[18]), .B0(DataB[17]), .B1(DataB[18]), 
        .BCI(co8), .CON(Add_Sub), .BCO(co9), .S0(tsum17), .S1(tsum18));

    FADSU2 addsub_10 (.A0(DataA[19]), .A1(DataA[20]), .B0(DataB[19]), .B1(DataB[20]), 
        .BCI(co9), .CON(Add_Sub), .BCO(co10), .S0(tsum19), .S1(tsum20));

    FADSU2 addsub_11 (.A0(DataA[21]), .A1(DataA[22]), .B0(DataB[21]), .B1(DataB[22]), 
        .BCI(co10), .CON(Add_Sub), .BCO(co11), .S0(tsum21), .S1(tsum22));

    FADSU2 addsub_12 (.A0(scuba_vlo), .A1(Add_Sub), .B0(add_sub_inv), .B1(scuba_vlo), 
        .BCI(co11), .CON(Add_Sub), .BCO(), .S0(tco_n_1), .S1());

    FADD2B addsub_o0 (.A0(tco_n_1), .A1(DataA[23]), .B0(tco_n_1), .B1(t_bn), 
        .CI(scuba_vlo), .COUT(co_n_t), .S0(), .S1(sum23_r1));

    VLO scuba_vlo_inst (.Z(scuba_vlo));

    FADD2B addsub_o1 (.A0(scuba_vlo), .A1(scuba_vlo), .B0(scuba_vlo), .B1(scuba_vlo), 
        .CI(co_n_t), .COUT(), .S0(co_n), .S1());

    assign co_n_1 = r0_co_n_1;
    assign Result[22] = r0_sum22;
    assign Result[21] = r0_sum21;
    assign Result[20] = r0_sum20;
    assign Result[19] = r0_sum19;
    assign Result[18] = r0_sum18;
    assign Result[17] = r0_sum17;
    assign Result[16] = r0_sum16;
    assign Result[15] = r0_sum15;
    assign Result[14] = r0_sum14;
    assign Result[13] = r0_sum13;
    assign Result[12] = r0_sum12;
    assign Result[11] = r0_sum11;
    assign Result[10] = r0_sum10;
    assign Result[9] = r0_sum9;
    assign Result[8] = r0_sum8;
    assign Result[7] = r0_sum7;
    assign Result[6] = r0_sum6;
    assign Result[5] = r0_sum5;
    assign Result[4] = r0_sum4;
    assign Result[3] = r0_sum3;
    assign Result[2] = r0_sum2;
    assign Result[1] = r0_sum1;
    assign Result[0] = r0_sum0;


    // exemplar begin
    // exemplar attribute FF_25 GSR ENABLED
    // exemplar attribute FF_24 GSR ENABLED
    // exemplar attribute FF_23 GSR ENABLED
    // exemplar attribute FF_22 GSR ENABLED
    // exemplar attribute FF_21 GSR ENABLED
    // exemplar attribute FF_20 GSR ENABLED
    // exemplar attribute FF_19 GSR ENABLED
    // exemplar attribute FF_18 GSR ENABLED
    // exemplar attribute FF_17 GSR ENABLED
    // exemplar attribute FF_16 GSR ENABLED
    // exemplar attribute FF_15 GSR ENABLED
    // exemplar attribute FF_14 GSR ENABLED
    // exemplar attribute FF_13 GSR ENABLED
    // exemplar attribute FF_12 GSR ENABLED
    // exemplar attribute FF_11 GSR ENABLED
    // exemplar attribute FF_10 GSR ENABLED
    // exemplar attribute FF_9 GSR ENABLED
    // exemplar attribute FF_8 GSR ENABLED
    // exemplar attribute FF_7 GSR ENABLED
    // exemplar attribute FF_6 GSR ENABLED
    // exemplar attribute FF_5 GSR ENABLED
    // exemplar attribute FF_4 GSR ENABLED
    // exemplar attribute FF_3 GSR ENABLED
    // exemplar attribute FF_2 GSR ENABLED
    // exemplar attribute FF_1 GSR ENABLED
    // exemplar attribute FF_0 GSR ENABLED
    // exemplar end

endmodule
